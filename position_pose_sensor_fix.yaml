#version 1.1
#author:wuzida
#since the original msf yaml does not provide enough explanation of those parameters, so I add essential explanations as follows and hope the later researchers to fully understand the msf mechanism.

/core/data_playback: true
/core/fixed_bias: 0.01

#########IMU PARAMETERS#######
#######  #The range of the noises were set in MSF_Core.cfg, you cannot set the value beyond the range(threshold),or it will be not effective
core/core_noise_acc: 0.5 #2.0000e-3  # EuRoc has those parameters, but KITTI does not.
core/core_noise_accbias: 0.05 #3.0000e-3  
core/core_noise_gyr: 0.05 #1.6968e-04 
core/core_noise_gyrbias: 0.005 #1.9393e-05

/vision_sensor/pose_sensor/pose_fixed_scale: 1  #used to control the mono slam's scale. if you use stereo or rbg-d, you should fix it to 1
/vision_sensor/pose_sensor/pose_noise_scale: 0.0
/vision_sensor/pose_sensor/pose_noise_p_wv: 0.0
/vision_sensor/pose_sensor/pose_noise_q_wv: 0.0
/vision_sensor/pose_sensor/pose_noise_q_ic: 0.0
/vision_sensor/pose_sensor/pose_noise_p_ic: 0.0
/vision_sensor/pose_sensor/pose_delay: 0.1 # this indicates the sensor delay of GNSS receiver. Not like MSCKF and VINS, MSF doesn't estimate this parameter in core state, you should adjust it by experiments
/vision_sensor/pose_sensor/pose_noise_meas_p: 0.02 #set by experience 
/vision_sensor/pose_sensor/pose_noise_meas_q: 0.02
/vision_sensor/pose_sensor/pose_initial_scale: 1

# initialization of camera w.r.t. IMU, for KITTI
#set by offline calibration 
#warning: msf's transform is inverse from the KITTI, so if you see sawtooth trajectory, you should notice it.
/vision_sensor/pose_sensor/init/q_ic/w: -0.4975 #0.4975
/vision_sensor/pose_sensor/init/q_ic/x: 0.5069 #0.5069
/vision_sensor/pose_sensor/init/q_ic/y: -0.4955 #-0.4955
/vision_sensor/pose_sensor/init/q_ic/z: 0.5001 #0.5001
/vision_sensor/pose_sensor/init/p_ic/x: -0.3391  #1.1022 
/vision_sensor/pose_sensor/init/p_ic/y: 0.7468 #-0.3191
/vision_sensor/pose_sensor/init/p_ic/z: -1.0957 #0.7461
 
###SLAM sensor 
/vision_sensor/position_pose_sensor/pose_fixed_scale: true
/vision_sensor/position_pose_sensor/pose_fixed_p_ic: true
/vision_sensor/position_pose_sensor/pose_fixed_q_ic: true
/vision_sensor/position_pose_sensor/pose_fixed_p_wv: true
/vision_sensor/position_pose_sensor/pose_fixed_q_wv: false

/vision_sensor/pose_sensor/pose_absolute_measurements: true #if the pose from slam is the absolute value, but not relative value from last measurement, it should be true. e.g. orb-slam: true
/vision_sensor/pose_sensor/pose_use_fixed_covariance: true #you can fix the covariance here if the slam system cannot provide the covariance
/vision_sensor/pose_sensor/pose_measurement_world_sensor: false  # selects if sensor measures its position w.r.t. world (true, e.g. Vicon) or the position of the world coordinate system w.r.t. the sensor (false, e.g. ethzasl_ptam)
/vision_sensor/pose_sensor/pose_measurement_minimum_dt: 0.5  # Sets the minimum time in seconds between two pose measurements. 

/vision_sensor/position_pose_sensor/position_delay: 0 # this indicates the sensor delay of GNSS receiver. Not like MSCKF and VINS, MSF doesn't estimate this parameter in core state
/vision_sensor/position_pose_sensor/position_noise_meas: 0.1 #if you fix the noises covariance of GNSS or other position sensors, you can fill the noise convariance by yourself.

#GNSS sensors
/vision_sensor/position_sensor/init/p_ip/x: 0 #-0.02
/vision_sensor/position_sensor/init/p_ip/y: 0 #0.05
/vision_sensor/position_sensor/init/p_ip/z: 0 #0.05

/vision_sensor/position_pose_sensor/core_height: 1  #used to multiply scale for initialization 
/vision_sensor/position_pose_sensor/position_yaw_init: 62 #-128.0 #used this value to set initial yaw bias between SLAM position to Horizontal plane and GNSS position, the two trajectories has the yaw bias.


/vision_sensor/position_pose_sensor/position_fixed_p_ip: ture
/vision_sensor/position_sensor/position_use_fixed_covariance: false #KITTI has the covariance of GPS
/vision_sensor/position_sensor/position_absolute_measurements: true


